resources/chromium/webxr-test.js:		      if (nativeOriginInformation.referenceSpaceType == vrMojom.XRReferenceSpaceType.kUnbounded
resources/chromium/webxr-test.js:		       || nativeOriginInformation.referenceSpaceType == vrMojom.XRReferenceSpaceType.kBoundedFloor) {
resources/chromium/webxr-test.js:		        case vrMojom.XRReferenceSpaceType.kLocal:
resources/chromium/webxr-test.js:		        case vrMojom.XRReferenceSpaceType.kLocalFloor:
resources/chromium/webxr-test.js:		        case vrMojom.XRReferenceSpaceType.kViewer:
resources/chromium/webxr-test.js:		        case vrMojom.XRReferenceSpaceType.kBoundedFloor:
resources/chromium/webxr-test.js:		        case vrMojom.XRReferenceSpaceType.kUnbounded:
resources/chromium/webxr-test.js:		          throw new TypeError("Unrecognized XRReferenceSpaceType!");
webxr/events_referenceSpace_reset_immersive.https.html:		          "XRReferenceSpaceEvent.referenceSpace returns the same object.");
webxr/events_referenceSpace_reset_immersive.https.html:		          "XRReferenceSpaceEvent.transform returns the same object.");
webxr/events_referenceSpace_reset_inline.https.html:		          "XRReferenceSpaceEvent.referenceSpace returns the same object.");
webxr/events_referenceSpace_reset_inline.https.html:		          "XRReferenceSpaceEvent.transform returns the same object.");
webxr/hit-test/ar_hittest_subscription_refSpaces.https.html:		// |refSpaceName| - XRReferenceSpaceType - either 'local', 'local-floor' or 'viewer'.
webxr/hit-test/ar_hittest_subscription_unlocalizable.https.html:		// |refSpaceName| - XRReferenceSpaceType - either 'local', 'local-floor' or 'viewer'.
webxr/idlharness.https.window.js:		      XRReferenceSpace: ['xrReferenceSpace'],
webxr/idlharness.https.window.js:		      // TODO: XRReferenceSpaceEvent
webxr/idlharness.https.window.js:		    self.xrReferenceSpace = await self.xrSession.requestReferenceSpace('viewer');
webxr/xrReferenceSpace_originOffset.https.html:		let testName = "Updating XRReferenceSpace origin offset updates view and input matrices.";
webxr/xrReferenceSpace_originOffset_viewer.https.html:		let testName = "Creating XRReferenceSpace origin offset off of `viewer` space works.";
webxr/xrSession_requestReferenceSpace.https.html:		              assert_true(referenceSpace instanceof XRReferenceSpace,
webxr/xrSession_requestReferenceSpace.https.html:		              assert_true(referenceSpace instanceof XRReferenceSpace,
webxr/xrSession_requestReferenceSpace.https.html:		              assert_true(referenceSpace instanceof XRReferenceSpace,
webxr/xrSession_requestReferenceSpace_features.https.html:		            assert_true(referenceSpace instanceof XRReferenceSpace,
